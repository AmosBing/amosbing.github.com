<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Knowing_GitHub | Amos’s Blog]]></title>
  <link href="http://AmosBing.github.io/blog/categories/knowing-github/atom.xml" rel="self"/>
  <link href="http://AmosBing.github.io/"/>
  <updated>2014-04-23T10:56:08+08:00</updated>
  <id>http://AmosBing.github.io/</id>
  <author>
    <name><![CDATA[AmosBing]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Blog 环境的基本配置]]></title>
    <link href="http://AmosBing.github.io/blog/2014/04/22/configure-the-blog-evironment/"/>
    <updated>2014-04-22T09:31:16+08:00</updated>
    <id>http://AmosBing.github.io/blog/2014/04/22/configure-the-blog-evironment</id>
    <content type="html"><![CDATA[<p>该系列的<a href="http://amosbing.github.io/blog/2014/04/18/begin-blog-on-github-with-octopress/">另一篇文字</a>已经详细描述如何使用Octopress在GitHub上搭建blog环境，这里需要描述一些blog相关的细节。<!-- more --></p>

<h1>第一项：基本配置</h1>

<p>主要是由于GFW的原因，将会造成页面load很慢。所以要做好配置。</p>

<ul>
<li>修改文件：_config.yml ，这个配置文件都有相应的注释。主要就是改一些博客头，作者名之类的东西。 注意最好把里面的twitter相关的信息全部删掉。</li>
<li>修改定制文件/source/_includes/custom/head.html 把google的自定义字体去掉。</li>
</ul>


<h1>添加新的page</h1>

<p>（如图红色区域的内容）</p>

<p><img src="https://github.com/AmosBing/blogImages/blob/master/Image%20of%20blog/Blog%20%E7%8E%AF%E5%A2%83%E7%9A%84%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/whereIsPages.png?raw=true" alt="icon" /></p>

<blockquote><p>参考：</p>

<ol>
<li><a href="http://www.tuicool.com/articles/VZB3um">http://www.tuicool.com/articles/VZB3um</a></li>
<li><a href="http://www.cnblogs.com/oec2003/archive/2013/05/31/3109577.html">http://www.cnblogs.com/oec2003/archive/2013/05/31/3109577.html</a></li>
</ol>
</blockquote>

<h5>使用rake new_page[页面名称或目录] 命令</h5>

<p>如（在终端中，现进入Octopress根目录）</p>

<pre><code>如果运行：

rake new_page[super-awesome]
会创建文件如下目录 /source/super-awesome/index.markdown
如果运行：
rake new_page[super-awesome/page.html]
会创建文件如下目录 /source/super-awesome/page.html
</code></pre>

<p>打开生成的文件，里面默认有如下信息：</p>

<pre><code>layout: page
title: "Super Awesome" //更在这里为你想要的名字
date: 2011-07-03 5:59
comments: true
sharing: true
footer: true
</code></pre>

<p>然后你能在octopress的source文件目录下看到名为super-awesome的文件夹(<strong>该文件夹是你设定的页面名称</strong>)，但是如果现在生成网站，并不能自动把新的页面显示在导航区。</p>

<p>为了显示出来，得继续往下做几步。</p>

<p>打开文件source/_includes/custom/navigation.html，默认情况下如下所示：</p>

<pre><code>&lt;ul class="main-navigation"&gt;
    &lt;li&gt;&lt;a href="/"&gt;Blog&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/blog/archives"&gt;Archives&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>可以将Blog和Archives修改为“主页”和“时间轴”（任何你想表示的文字）。</p>

<p>然后我们在此添加一个新页面，比如关于页面，我们可以按下面步骤实现：</p>

<p>修改上面的navigation.html为：</p>

<pre><code>&lt;ul class="main-navigation"&gt;
    &lt;li&gt;&lt;a href="/"&gt;主页&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/blog/archives"&gt;时间轴&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/super-awesome"&gt;关于&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<h1>添加侧边栏文章分类</h1>

<ul>
<li>在<strong>plugins</strong>目录中创建<strong>category_list_tag.rb</strong>文件，</li>
</ul>


<p>文件内容如下：</p>

<pre><code>moduleJekyll
    class CategoryListTag &lt; Liquid::Tag 
    def render(context)
        html = ""
        categories = context.registers[:site].categories.keys
        categories.sort.each do |category| 
            posts_in_category = context.registers[:site].categories[category].size 
            category_dir = context.registers[:site].config['category_dir']
            category_url = File.join(category_dir, category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase) 
            html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='http://AmosBing.github.io/#{category_url}/'&gt;#{category} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n" 
            end 
            html
        end 
    end
end
Liquid::Template.register_tag('category_list', Jekyll::CategoryListTag)

* 添加__source/_includes/asides/category_list.html__文件
</code></pre>

<p>内容如下：</p>

<pre><code>&lt;section&gt;
    &lt;h1&gt;文章分类&lt;/h1&gt; 
    &lt;ul id="categories"&gt; 
    {&gt;% category_list &gt;%} //使用时此处的两个“&gt;”号要删除。
    &lt;/ul&gt; 
&lt;/section&gt;
</code></pre>

<ul>
<li>修改<strong> _config.yml </strong>文件</li>
</ul>


<p>在default_asides项中添加asides/category_list.html，值之间以逗号隔开。</p>

<pre><code>如：
default_asides: [asides/category_list.html, asides/recent_posts.html]
（中括号的排列顺序，对应的就是页面中从上倒下的排列顺序）
</code></pre>

<ul>
<li>做完上面三步，生成网站后，就能看到右侧边栏出现了“文章分类”四个大字</li>
</ul>


<p>但是很有可能这时候你并看不到具体的分类。</p>

<p>让具体分类出现，你只需要在你的每一片blog原文件的头部添加“categories:”属性，然后octopress就会为你自动整理好正确的分类即分类下的文章数量。</p>

<blockquote><p>在侧边栏中还可以添加其他的一些组件，如新浪微博、我的豆瓣、最新评论、标签云等，添加页面以及让其显示的方法和上面类似。</p></blockquote>

<h1>添加微博分享和用户评论</h1>

<p>我主要介绍一下如何配置评论和分享到微博功能。步骤如下：
* 在<em>config.yml中增加一项： weibo_share: true
* 修改 source/</em>includes/post/sharing.html
增加</p>

<pre><code>// 下面的大括号是全角的，如果复制，请自行改成半角
｛% if site.weibo_share %｝
｛% include post/weibo.html %｝
｛% endif %｝
</code></pre>

<ul>
<li>增加文件：source/_includes/post/weibo.html</li>
<li>访问 <a href="http://www.jiathis.com/">http://www.jiathis.com/</a> ，获取分享的代码</li>
<li>访问 <a href="http://uyan.cc/">http://uyan.cc/</a> ，获得评论的代码</li>
<li>将上面2步的代码都加入到weibo.html中即可</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[High 起来！开始自己的技术blog]]></title>
    <link href="http://AmosBing.github.io/blog/2014/04/18/begin-blog-on-github-with-octopress/"/>
    <updated>2014-04-18T09:12:28+08:00</updated>
    <id>http://AmosBing.github.io/blog/2014/04/18/begin-blog-on-github-with-octopress</id>
    <content type="html"><![CDATA[<p>想了很久很久，终于决定开始自己的blog之旅。之前一直纠结在哪个网站（新浪？cococa China？CSDN？）上开始自己的blog。<!-- more -->后来无意间看到唐巧的这篇博文<a href="http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/">象写程序一样写博客</a>，觉得之前的想法都弱爆了。</p>

<p>写这个文档之前我还没开始搭建基于Github的Blog。寥以这边文档记录我整个搭建的过程。我的配置环境是 mac os x 10.9.2 。</p>

<p>开始做之前，先了解下这样技术背景。关于Github可以另行了解，在此不做深入。能在Github上写blog关键之基础是其<strong>Pages</strong>功能，该功能支持上传html，于是就催生了一个叫<strong>Octopress</strong>（A blogging framework for hackers）的blog管理工具，基本原理是用git来管理你的文章，最终发布到github上成为一个独立博客站点。</p>

<p>OK！要开始我的艰辛探索之旅了。主要参照：<a href="http://octopress.org/docs/setup/">Octopress Setup</a>。
工欲善其事，必先利其器。先安装必要的工具和环境吧！</p>

<h2>其一：注册一个<a href="https://github.com/signup/free">GitHub免费帐号</a>。</h2>

<h2>其二：在本机创建一个ssh的钥匙。</h2>

<p>更多教程则可以参考<a href="https://help.github.com/articles/generating-ssh-keys">创建SSH（Github官方）</a>。</p>

<p>如下是我的步骤，打开mac下的终端，</p>

<p>输入：</p>

<pre><code>[[ -f ~/.ssh/id_rsa.pub ]] || ssh-keygen -t rsa
</code></pre>

<p>然后按提示出入密码，得到如下终端输出：</p>

<blockquote><p>The key&rsquo;s randomart image is:
<img src="https://github.com/AmosBing/blogImages/blob/master/Image%20of%20blog/High%20%E8%B5%B7%E6%9D%A5%EF%BC%81%E5%BC%80%E5%A7%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8A%80%E6%9C%AFblog/RsaOut.png?raw=true" alt="icon" /></p></blockquote>

<p>这样就在本地生成了ssh。
成功之后，终端进入”.ssh”目录下，
输入：</p>

<pre><code>pbcopy &lt; ~/.ssh/id_rsa.pub
</code></pre>

<p>这是把id_rsa.pub文件的能入拷贝到了系统剪切板上了(所以你也可以直接打开id_rsa.pub文件，拷贝里面的内容)。</p>

<p>拷贝的内容需要粘贴到Github上的。<strong>具体操作</strong>如下：</p>

<blockquote><p>在浏览器中打开页面：<a href="https://github.com/account/ssh">https://github.com/account/ssh</a></p>

<p>点击 Add another public key，粘贴前面步骤拷贝的信息。</p>

<p>请格外注意，不要在Title中填写内容，直接将复制的内容粘贴到Key中，然后点击：Add Key即可。</p>

<p>如果需要确认是否设置成功可以参考<a href="https://help.github.com/articles/generating-ssh-keys">创建SSH（Github官方）</a>的第四步。</p></blockquote>

<h2>其三：下载并安装Git。</h2>

<p>无论是直接下载Git源码还是，Git安装包，只要安装了就行。头疼的是Git官网经常是被GFW了，需要翻墙，各显神通了。我偷懒直接到google下载一个安装包。</p>

<h2>其四：下载并安装rvm和ruby。</h2>

<p><strong>安装 rvm</strong></p>

<p>直接在终端中运行：<a href="http://octopress.org/docs/setup/rvm/">参考官网</a></p>

<pre><code>curl -L https://get.rvm.io | bash -s stable 
</code></pre>

<p>就可以下载和安装rvm，正常的话需要等各几分钟，如果终端会提示安装失败，种种原因，运行上面的命令<strong>重新开始安装</strong>就好。一定要<strong>确保安装成功</strong>，否则无法继续。</p>

<p><strong>安装 ruby</strong></p>

<p>rvm安装成功，然后安装ruby（此处安装2.1版本），在终端中运行（三行一起输入）：</p>

<pre><code>rvm install 2.1
rvm use 2.1
rvm rubygems latest
</code></pre>

<blockquote><p>注：此处的 ruby版本在不停升级，随着时间推移，你可能需要选择比较高的版本。</p></blockquote>

<h2>其五：安装Octopress。这是我们创建blog的主角了。</h2>

<p>以下命令都在终端里输入
先从Github上把其复制一份到本地：</p>

<pre><code>git clone git://github.comi/imathis/octopress.git octopress
</code></pre>

<p>进入octopress目录：</p>

<pre><code>cd octopress  
</code></pre>

<p>查看ruby版本信息，需要1.9.3及以上：</p>

<pre><code>ruby --version
</code></pre>

<p>安装cotopress的依赖环境：</p>

<pre><code>gem install bundler bundle install
</code></pre>

<p>以默认设置安装octopress：</p>

<pre><code>rake install
</code></pre>

<p>到现在为止，Octopress 已经可以使用了，可以运行以下两个指令来检验</p>

<pre><code>rake generate //生成静态页面
rake preview //启动本地预览
</code></pre>

<p>打开浏览器，输入 <a href="http://localhost:4000/">http://localhost:4000/</a> 就可以看到Blog的界面（使用Ctrl+C停止预览）。
 <img src="https://github.com/AmosBing/blogImages/blob/master/Image%20of%20blog/High%20%E8%B5%B7%E6%9D%A5%EF%BC%81%E5%BC%80%E5%A7%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8A%80%E6%9C%AFblog/BlogHome.png?raw=true" alt="icon" /></p>

<blockquote><p>如果你不管顺利与不顺利，都做到这一步了。那么恭喜你，blog的基础环境已经搭建完毕。先享受一杯茶吧。</p></blockquote>

<h2>创建一个没有内容的博客，并发布到GitHub上</h2>

<h4>我们创建一个blog来试试</h4>

<pre><code>rake new_post["Frist blog"]
rake generate
rake preview
</code></pre>

<p>打开浏览器，输入 <a href="http://localhost:4000/">http://localhost:4000/</a> 就可以看到如下的界面
<img src="https://github.com/AmosBing/blogImages/blob/master/Image%20of%20blog/High%20%E8%B5%B7%E6%9D%A5%EF%BC%81%E5%BC%80%E5%A7%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8A%80%E6%9C%AFblog/BlogFirstPost.png?raw=true" alt="icon" />
终于，我们配置完成了octopress部分。</p>

<h4>发布blog</h4>

<ul>
<li>方案一</li>
</ul>


<p>直接rake</p>

<pre><code>rake deploy
</code></pre>

<p>第一次运行时，会询问是否建立对github的授权，输入：yes。然后将站点更新的内容推送到github上。</p>

<blockquote><p>注：使用该方案时，为了避免麻烦，
如 To git@github.com:AmosBing/amosbing.github.com.git</p>

<p>! [rejected]        master &ndash;> master (non-fast-forward)</p>

<p>这样的报错，<strong>应该让你的github项目时崭新的</strong>，没有提交过其他数据。</p></blockquote>

<ul>
<li>方案二

<blockquote><p>不建议使用，该方法其实是在手动做rake deploy命令的事情。只有rake deploy失败时再使用吧。</p></blockquote></li>
</ul>


<p>直接把octopress下的静态页面的原始文件全部拷贝到github的版本库的本地目录下。全部覆盖，然后使用 git push 命令提交到 master 分支下就ok了。</p>

<p>如下截图供参考：
需要拷贝的文件</p>

<p><img src="https://github.com/AmosBing/blogImages/blob/master/Image%20of%20blog/High%20%E8%B5%B7%E6%9D%A5%EF%BC%81%E5%BC%80%E5%A7%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8A%80%E6%9C%AFblog/quide001.png?raw=true" alt="icon" /></p>

<p>需要被覆盖的文件</p>

<p><img src="https://github.com/AmosBing/blogImages/blob/master/Image%20of%20blog/High%20%E8%B5%B7%E6%9D%A5%EF%BC%81%E5%BC%80%E5%A7%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8A%80%E6%9C%AFblog/guide002.png?raw=true" alt="icon" /></p>

<h2>最后最多等上十分钟，新鲜美味的blog就出炉了</h2>

<p>自己到github上得到你的blog地址，然后开始分享吧。</p>

<p><img src="https://github.com/AmosBing/blogImages/blob/master/Image%20of%20blog/High%20%E8%B5%B7%E6%9D%A5%EF%BC%81%E5%BC%80%E5%A7%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8A%80%E6%9C%AFblog/guide003.png?raw=true" alt="icon" /></p>
]]></content>
  </entry>
  
</feed>
